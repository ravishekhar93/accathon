package frames;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Akash
 */
public class ModifyStationFrame extends javax.swing.JFrame {

    /**
     * Creates new form ModifyStationFrame
     */
    public ModifyStationFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btUpdate = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        tvNeaStationId = new javax.swing.JTextField();
        tvStationName = new javax.swing.JTextField();
        tvBeforeStationID = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tvStationCOde = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btUpdate.setText("ADD");
        btUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUpdateActionPerformed(evt);
            }
        });

        jLabel1.setText("                                                 ADD STATION");

        jLabel2.setText("NEW STATION ID:");

        jLabel3.setText("NEW STATION NAME:");

        jLabel4.setText("ADD BEFORE STATION ID:");

        tvNeaStationId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tvNeaStationIdActionPerformed(evt);
            }
        });

        tvStationName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tvStationNameActionPerformed(evt);
            }
        });

        tvBeforeStationID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tvBeforeStationIDActionPerformed(evt);
            }
        });

        jLabel5.setText("ADD NEW STATION CODE:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tvNeaStationId, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                            .addComponent(tvStationName)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tvBeforeStationID))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 149, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tvStationCOde)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tvNeaStationId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tvStationName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tvBeforeStationID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tvStationCOde, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(btUpdate)
                .addGap(65, 65, 65))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUpdateActionPerformed
        String newStationId = tvNeaStationId.getText().toString();
        String newStationName = tvStationName.getText().toString();
        String beforeStationId = tvBeforeStationID.getText().toString();
        String newStationCode=tvStationCOde.getText().toString();

        addNewStation(newStationId, newStationName, beforeStationId,newStationCode);
    }//GEN-LAST:event_btUpdateActionPerformed

    private void tvNeaStationIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tvNeaStationIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tvNeaStationIdActionPerformed

    private void tvStationNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tvStationNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tvStationNameActionPerformed

    private void tvBeforeStationIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tvBeforeStationIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tvBeforeStationIDActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifyStationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifyStationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifyStationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifyStationFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModifyStationFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField tvBeforeStationID;
    private javax.swing.JTextField tvNeaStationId;
    private javax.swing.JTextField tvStationCOde;
    private javax.swing.JTextField tvStationName;
    // End of variables declaration//GEN-END:variables

    private void addNewStation(String newStationId, String newStationName, String beforeStationId,String newStationCode) {
        Connection con = null;
        PreparedStatement ps = null;
        doFetchNewStationsAfterId(con, ps, newStationId, newStationName, beforeStationId,newStationCode);

    }

    private void doFetchNewStationsAfterId(Connection con, PreparedStatement ps, String newStationId, String newStationName, String beforeStationId
    ,String newStationCode) {
        try {
            int id=0,temp=0;
            Class.forName("oracle.jdbc.driver.OracleDriver");
            con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "system", "12345");
            ps = con.prepareStatement("select BEFORESTATION from STATION where SID=?");
            ps.setString(1, beforeStationId);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                //Retrieve by column name
                id = rs.getInt("BEFORESTATION");
                temp = id;

                //Display values
                System.out.print("ID: " + id);
            }
            rs.close();
            if(id!=0){
                doAddNewStation(con,ps,newStationId,newStationName,beforeStationId,id,newStationCode);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void doAddNewStation(Connection con, PreparedStatement ps,String newStationId, String newStationName, String beforeStationId, int id,String newStationCode) {
        try{
            Class.forName("oracle.jdbc.driver.OracleDriver");
            con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "system", "12345");
            ps = con.prepareStatement("insert into STATION values(?,?,?,?,?)");
            ps.setString(1, newStationId);
            ps.setString(2,newStationName);
            ps.setString(3, newStationCode);
            ps.setString(4, beforeStationId);
            ps.setString(5, Integer.toString(id));
            int i = ps.executeUpdate();
            if (i == 1) {
                doChangeTheBeforeStationId(con,ps,beforeStationId,newStationId,id);
            } else {
                JOptionPane.showMessageDialog(this, "Updation is unsuccessfull");
            }
        }catch(Exception e){
            e.printStackTrace();
        }
    }

    private void doChangeTheBeforeStationId(Connection con, PreparedStatement ps, String beforeStationId, 
            String newStationId,int id) {
                    try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "system", "12345");
            ps = con.prepareStatement("update STATION SET BEFORESTATION=? where BEFORESTATION=?");
            ps.setString(1, newStationId);
            ps.setString(2, Integer.toString(id));

            int i = ps.executeUpdate();
            if (i == 1) {
                doChangeTheAfterStationId(con,ps,beforeStationId,newStationId,id);

            } else {
                JOptionPane.showMessageDialog(this, "Updation is unsuccessfull");
            }
        } catch (Exception e) {
                e.printStackTrace();
        }
       
    }

    private void doChangeTheAfterStationId(Connection con, PreparedStatement ps, String beforeStationId, String newStationId, int id) {
        
        try {
            Class.forName("oracle.jdbc.driver.OracleDriver");
            con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe", "system", "12345");
            ps = con.prepareStatement("update STATION SET AFTERSTATION=? where AFTERSTATION=?");
            ps.setString(1, newStationId);
            ps.setString(2, beforeStationId);

            int i = ps.executeUpdate();
            if (i == 1) {
                 JOptionPane.showMessageDialog(this, "Updation is successfull");

            } else {
                JOptionPane.showMessageDialog(this, "Updation is unsuccessfull");
            }
        } catch (Exception e) {
                e.printStackTrace();
        }
    }

}
